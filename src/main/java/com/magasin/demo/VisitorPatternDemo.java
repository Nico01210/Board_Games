package com.magasin.demo;

import com.magasin.Core.*;
import com.magasin.model.tictactoe.TicTacToe;
import com.magasin.controller.GameController;
import com.magasin.ui.View;

/**
 * D√©monstration du moteur de jeu avec pattern Visitor
 * Cette d√©mo fait jouer deux IA l'une contre l'autre pour montrer
 * le fonctionnement complet de la machine √† √©tats et du moteur Visitor
 */
public class VisitorPatternDemo {

    public static void main(String[] args) {
        System.out.println("üöÄ D√âMONSTRATION DU PATTERN VISITOR POUR TICTACTOE");
        System.out.println("=" .repeat(60));
        
        // Cr√©e deux IA pour une d√©monstration automatique
        Player ia1 = new ArtificialPlayer("IA_Alpha", 'X');
        Player ia2 = new ArtificialPlayer("IA_Beta", 'O');

        // Cr√©e le jeu TicTacToe
        Game ticTacToeGame = new TicTacToe(ia1, ia2);

        // Cr√©e le contr√¥leur avec machine √† √©tats et moteur Visitor
        GameController controller = new GameController();

        System.out.println("üéØ Lancement d'une partie IA vs IA...");
        System.out.println("üìã Pattern utilis√©s :");
        System.out.println("   ‚Ä¢ State Machine (Machine √† √©tats)");
        System.out.println("   ‚Ä¢ Visitor Pattern (Moteur sp√©cialis√©)");
        System.out.println("   ‚Ä¢ Template Method (Jeux abstraits)");
        System.out.println("   ‚Ä¢ Strategy Pattern (Types de joueurs)");
        System.out.println();

        // Lancer la d√©monstration
        controller.startGame(ticTacToeGame);
        
        System.out.println("\nüèÅ D√©monstration termin√©e !");
        System.out.println("‚úÖ Le pattern Visitor a permis une logique sp√©cialis√©e pour TicTacToe");
        System.out.println("‚úÖ La machine √† √©tats a g√©r√© les transitions");
        System.out.println("‚úÖ Le moteur a trait√© chaque √©tat de mani√®re sp√©cifique");
    }
}